{"version":3,"sources":["leaflet-ant-path.js"],"names":["factory","window","define","amd","exports","module","require","L","AntPathModule","Polyline","AntPath","MultiPolyline","MultiAntPath","polyline","antPath","path","options","multiPolyline","multiAntPath","multiplePaths","FeatureGroup","extend","_path","_animatedPathId","_animatedPathClass","paused","delay","dashArray","pulseColor","initialize","LayerGroup","prototype","call","this","Util","setOptions","_map","Date","getTime","_draw","onAdd","map","on","_calculateAnimationSpeed","onRemove","off","pause","animatedPolyElement","document","getElementsByClassName","i","length","removeAttribute","resume","pathOpts","pulseOpts","color","className","addLayer","zoomLevel","getZoom","animationDuration","setAttribute","latlngs","_layers","_options","setLatLngs","len","eachLayer","layer","removeLayer","getLatLngs","push"],"mappings":"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","file":"leaflet-ant-path.min.js","sourcesContent":["(function (factory, window) {\n    \"use strict\";\n\n    /* istanbul ignore next */\n    // define an AMD module that relies on 'leaflet'\n    if (typeof define === 'function' && define.amd) {\n        define(['leaflet'], factory);\n\n        // define a Common JS module that relies on 'leaflet'\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('leaflet'));\n    }\n\n    // attach your plugin to the global 'L' variable and declares the factories\n    else if (typeof window !== 'undefined' && window.L) {\n        var AntPathModule = factory(L);\n        window.L.Polyline.AntPath = AntPathModule.AntPath;\n        window.L.MultiPolyline.MultiAntPath = AntPathModule.MultiAntPath;\n\n        window.L.polyline.antPath = function antPathFactory(path, options) {\n            return new window.L.Polyline.AntPath(path, options);\n        };\n\n        window.L.multiPolyline.multiAntPath = function multiAntPathFactory(multiplePaths, options) {\n            return new window.L.MultiPolyline.MultiAntPath(multiplePaths, options)\n        };\n    }\n}(function (L) {\n    \"use strict\";\n\n    /**\n     * Builds a polyline with a ant path animation\n     * @constructor\n     * @extends L.FeatureGroup\n     * @exports L.Polyline.AntPath\n     */\n    var AntPath = L.FeatureGroup.extend({\n        _path: null,\n        _animatedPathId: null,\n        _animatedPathClass: 'leaflet-ant-path',\n\n        /* default options */\n        options: {\n            paused: false,\n            delay: 400,\n            dashArray: [10, 20],\n            pulseColor: '#FFFFFF'\n        },\n\n        initialize: function (path, options) {\n            L.LayerGroup.prototype.initialize.call(this);\n            L.Util.setOptions(this, options);\n            this._map = null;\n            this._path = path;\n            this._animatedPathId = 'ant-path-' + new Date().getTime();\n            this._draw();\n        },\n\n        onAdd: function (map) {\n            this._map = map;\n            this._map.on('zoomend', this._calculateAnimationSpeed, this);\n\n            this._draw();\n            this._calculateAnimationSpeed();\n        },\n\n        onRemove: function (map) {\n            this._map.off('zoomend', this._calculateAnimationSpeed, this);\n            this._map = null;\n            L.LayerGroup.prototype.onRemove.call(this, map);\n        },\n\n        pause: function () {\n            if (this.options.paused) {\n                return false;\n            }\n\n            var animatedPolyElement = document.getElementsByClassName(this._animatedPathId);\n            for (var i = 0; i < animatedPolyElement.length; i++) {\n                animatedPolyElement[i].removeAttribute('style');\n                animatedPolyElement[i].removeAttribute('style');\n                animatedPolyElement[i].removeAttribute('style');\n            }\n\n            return this.options.paused = true;\n        },\n\n        resume: function () {\n            this._calculateAnimationSpeed();\n        },\n\n        _draw: function () {\n            var pathOpts = {};\n            var pulseOpts = {};\n\n            L.extend(pulseOpts, this.options);\n            L.extend(pathOpts, this.options);\n\n            pulseOpts.color = pulseOpts.pulseColor || this.options.pulseColor;\n            pulseOpts.className = this._animatedPathClass + ' ' + this._animatedPathId;\n\n            delete pathOpts.dashArray;\n\n            this.addLayer(L.polyline(this._path, pathOpts));\n            this.addLayer(L.polyline(this._path, pulseOpts));\n        },\n\n\n        _calculateAnimationSpeed: function () {\n            if (this.options.paused || !this._map) {\n                return;\n            }\n\n            var zoomLevel = this._map.getZoom();\n            var animatedPolyElement = document.getElementsByClassName(this._animatedPathId);\n\n            //Get the animation duration (in seconds) based on the given delay and the current zoom level\n            var animationDuration = 1 + (this.options.delay / 3) / zoomLevel + 's';\n\n            //TODO Use requestAnimationFrame to support IE\n            for (var i = 0; i < animatedPolyElement.length; i++) {\n                animatedPolyElement[i].setAttribute('style', '-webkit-animation-duration:' + animationDuration);\n                animatedPolyElement[i].setAttribute('style', '-moz-animation-duration:' + animationDuration);\n                animatedPolyElement[i].setAttribute('style', 'animation-duration:' + animationDuration);\n            }\n        }\n    });\n\n    /**\n     * Builds a multi-polyline with a ant path animation\n     * @constructor\n     * @extends L.FeatureGroup\n     * @exports L.MultiPolyline.MultiAntPath\n     */\n    var MultiAntPath = L.FeatureGroup.extend({\n        initialize: function (latlngs, options) {\n            this._layers = {};\n            this._options = options;\n            this.setLatLngs(latlngs);\n        },\n\n        setLatLngs: function (latlngs) {\n            var i = 0,\n                len = latlngs.length;\n\n            this.eachLayer(function (layer) {\n                if (i < len) {\n                    layer.setLatLngs(latlngs[i++]);\n                } else {\n                    this.removeLayer(layer);\n                }\n            }, this);\n\n            while (i < len) {\n                this.addLayer(new AntPath(latlngs[i++], this._options));\n            }\n\n            return this;\n        },\n\n        getLatLngs: function () {\n            var latlngs = [];\n\n            this.eachLayer(function (layer) {\n                latlngs.push(layer.getLatLngs());\n            });\n\n            return latlngs;\n        },\n\n        pause: function () {\n            this.eachLayer(function (layer) {\n                layer.pause();\n            });\n        },\n\n        resume: function () {\n            this.eachLayer(function (layer) {\n                layer.resume();\n            });\n        }\n    });\n\n    //Module exports\n    return {\n        AntPath: AntPath,\n        MultiAntPath: MultiAntPath\n    };\n}, window));"],"sourceRoot":"/source/"}